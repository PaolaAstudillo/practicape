{"/home/usuario/practicape/src/ejercicio.ts":{"path":"/home/usuario/practicape/src/ejercicio.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":24}},"2":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"3":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"4":{"start":{"line":23,"column":12},"end":{"line":23,"column":43}},"5":{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},"6":{"start":{"line":33,"column":21},"end":{"line":33,"column":31}},"7":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"8":{"start":{"line":42,"column":8},"end":{"line":42,"column":56}},"9":{"start":{"line":42,"column":39},"end":{"line":42,"column":54}},"10":{"start":{"line":50,"column":8},"end":{"line":50,"column":62}},"11":{"start":{"line":50,"column":39},"end":{"line":50,"column":60}},"12":{"start":{"line":59,"column":8},"end":{"line":59,"column":81}},"13":{"start":{"line":59,"column":39},"end":{"line":59,"column":79}},"14":{"start":{"line":66,"column":20},"end":{"line":66,"column":21}},"15":{"start":{"line":67,"column":8},"end":{"line":78,"column":10}},"16":{"start":{"line":69,"column":16},"end":{"line":76,"column":17}},"17":{"start":{"line":70,"column":20},"end":{"line":70,"column":70}},"18":{"start":{"line":75,"column":20},"end":{"line":75,"column":60}},"19":{"start":{"line":81,"column":0},"end":{"line":81,"column":24}},"20":{"start":{"line":83,"column":15},"end":{"line":83,"column":35}},"21":{"start":{"line":84,"column":0},"end":{"line":84,"column":35}},"22":{"start":{"line":85,"column":0},"end":{"line":85,"column":36}},"23":{"start":{"line":87,"column":0},"end":{"line":89,"column":1}},"24":{"start":{"line":88,"column":4},"end":{"line":88,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":18},"end":{"line":16,"column":5}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":25},"end":{"line":26,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":28},"end":{"line":35,"column":5}},"line":32},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":27},"end":{"line":43,"column":5}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":32},"end":{"line":42,"column":33}},"loc":{"start":{"line":42,"column":39},"end":{"line":42,"column":54}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":33},"end":{"line":51,"column":5}},"line":49},"6":{"name":"(anonymous_6)","decl":{"start":{"line":50,"column":32},"end":{"line":50,"column":33}},"loc":{"start":{"line":50,"column":39},"end":{"line":50,"column":60}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":47},"end":{"line":60,"column":5}},"line":58},"8":{"name":"(anonymous_8)","decl":{"start":{"line":59,"column":32},"end":{"line":59,"column":33}},"loc":{"start":{"line":59,"column":39},"end":{"line":59,"column":79}},"line":59},"9":{"name":"(anonymous_9)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":24},"end":{"line":79,"column":5}},"line":65},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":18},"end":{"line":68,"column":19}},"loc":{"start":{"line":68,"column":24},"end":{"line":77,"column":13}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"1":{"loc":{"start":{"line":59,"column":39},"end":{"line":59,"column":79}},"type":"binary-expr","locations":[{"start":{"line":59,"column":39},"end":{"line":59,"column":58}},{"start":{"line":59,"column":62},"end":{"line":59,"column":79}}],"line":59},"2":{"loc":{"start":{"line":69,"column":16},"end":{"line":76,"column":17}},"type":"if","locations":[{"start":{"line":69,"column":16},"end":{"line":76,"column":17}},{"start":{"line":69,"column":16},"end":{"line":76,"column":17}}],"line":69}},"s":{"0":1,"1":1,"2":1,"3":9,"4":1,"5":9,"6":5,"7":5,"8":1,"9":3,"10":1,"11":3,"12":1,"13":3,"14":2,"15":2,"16":7,"17":5,"18":2,"19":1,"20":1,"21":1,"22":1,"23":1,"24":2},"f":{"0":1,"1":9,"2":5,"3":1,"4":3,"5":1,"6":3,"7":1,"8":3,"9":2,"10":7},"b":{"0":[1,8],"1":[3,3],"2":[5,2]},"inputSourceMap":{"version":3,"file":"/home/usuario/practicape/src/ejercicio.ts","sources":["/home/usuario/practicape/src/ejercicio.ts"],"names":[],"mappings":";;;AAAA;;;GAGG;AACH,MAAa,MAAM;IACP,MAAM,CAAC,QAAQ,CAAS;IACxB,IAAI,CAAgC;IAE5C;;OAEG;IACH;QACI,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;IACnB,CAAC;IAED;;;OAGG;IACI,MAAM,CAAC,WAAW;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACnB,MAAM,CAAC,QAAQ,GAAG,IAAI,MAAM,EAAE,CAAC;QACnC,CAAC;QACD,OAAO,MAAM,CAAC,QAAQ,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,SAAS,CAAC,IAAY,EAAE,MAAc;QACzC,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;;;OAIG;IACI,gBAAgB,CAAC,IAAY;QAChC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;IACpD,CAAC;IAED;;;;OAIG;IACI,gBAAgB,CAAC,UAAkB;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC;IAC1D,CAAC;IAED;;;;;OAKG;IACI,sBAAsB,CAAC,SAAe,EAAE,OAAa;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,SAAS,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC;IAC7E,CAAC;IAED;;;OAGG;IACH,CAAC,MAAM,CAAC,QAAQ,CAAC;QACb,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,OAAO;YACH,IAAI,EAAE,GAA2C,EAAE;gBAC/C,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;oBAC3B,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;gBACtD,CAAC;qBAAM,CAAC;oBACJ,4DAA4D;oBAC5D,qDAAqD;oBACrD,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;gBAC5C,CAAC;YACL,CAAC;SACJ,CAAC;IACN,CAAC;CACJ;AA9ED,wBA8EC;AAED,oCAAoC;AACpC,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AACpC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AACnC,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;AAEpC,8BAA8B;AAC9B,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;IACvB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC","sourcesContent":["/**\n * Clase Logger implementada como un Singleton.\n * Se utiliza para registrar acciones en un sistema con información de usuario, acción y fecha-hora.\n */\nexport class Logger {\n    private static instance: Logger;\n    private logs: Array<[string, string, Date]>;\n\n    /**\n     * Constructor privado para prevenir la instanciación directa.\n     */\n    private constructor() {\n        this.logs = [];\n    }\n\n    /**\n     * Método estático para obtener la instancia del Singleton.\n     * @returns La instancia de Logger.\n     */\n    public static getInstance(): Logger {\n        if (!Logger.instance) {\n            Logger.instance = new Logger();\n        }\n        return Logger.instance;\n    }\n\n    /**\n     * Registra una acción en el log.\n     * @param user El usuario que realiza la acción.\n     * @param action La acción realizada.\n     */\n    public logAction(user: string, action: string): void {\n        const date = new Date();\n        this.logs.push([user, action, date]);\n    }\n\n    /**\n     * Obtiene las acciones realizadas por un usuario específico.\n     * @param user El usuario cuyas acciones se quieren obtener.\n     * @returns Un array de acciones realizadas por el usuario.\n     */\n    public getActionsByUser(user: string): Array<[string, string, Date]> {\n        return this.logs.filter(log => log[0] === user);\n    }\n\n    /**\n     * Obtiene las acciones de un tipo específico.\n     * @param actionType El tipo de acción que se quiere obtener.\n     * @returns Un array de acciones de un tipo específico.\n     */\n    public getActionsByType(actionType: string): Array<[string, string, Date]> {\n        return this.logs.filter(log => log[1] === actionType);\n    }\n\n    /**\n     * Obtiene las acciones que ocurrieron entre dos fechas.\n     * @param startDate La fecha de inicio.\n     * @param endDate La fecha de fin.\n     * @returns Un array de acciones entre las dos fechas.\n     */\n    public getActionsBetweenDates(startDate: Date, endDate: Date): Array<[string, string, Date]> {\n        return this.logs.filter(log => log[2] >= startDate && log[2] <= endDate);\n    }\n\n    /**\n     * Hace la clase iterable sobre los logs.\n     * @returns Un iterador para los logs.\n     */\n    [Symbol.iterator](): Iterator<[string, string, Date]> {\n        let index = 0;\n        return {\n            next: (): IteratorResult<[string, string, Date]> => {\n                if (index < this.logs.length) {\n                    return { value: this.logs[index++], done: false };\n                } else {\n                    // Cuando el iterador ha terminado, se devuelve 'done: true'\n                    // y se proporciona un valor 'undefined' para 'value'\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n    }\n}\n\n// Ejemplo de uso de la clase Logger\nconst logger = Logger.getInstance();\nlogger.logAction('user1', 'login');\nlogger.logAction('user2', 'logout');\n\n// Iterar sobre todos los logs\nfor (const log of logger) {\n    console.log(log);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"409d183caf10021489c9ee5c803b1c97421c0dca","contentHash":"620414b7a952e5e354bdd6e55d887ad01f4a8b0931442444a91ebe469839bad0"}}